(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{302:function(t,s,n){"use strict";n.r(s);var a=n(13),i=Object(a.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"什么是脚本语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是脚本语言"}},[this._v("#")]),this._v(" 什么是脚本语言？")]),this._v(" "),t("p",[this._v("脚本语言是为了缩短传统的编写-编译-链接-运行(edit-compile-link-run)过程而创建的计算机编程语言。\n1、脚本语言(JavaScript，VBscript等)介于HTML和C,C++,Java,C#等编程语言之间。\n　HTML通常用于格式化和链接文本。而编程语言通常用于向机器发出一系列复杂的指令。\n2、脚本语言与编程语言也有很多相似地方，其函数与编程语言比较相像一些,其也涉及到变量。\n与编程语言之间最大的区别是编程语言的语法和规则更为严格和复杂一些.\n3、与程序代码的关系：脚本也是一种语言，其同样由程序代码组成。\n4、脚本语言是一种解释性的语言,例如Python、vbscript,javascript等等,它不像其他语言可以编译成二进制代码,\n以可执行文件的形式存在，脚本语言不需要编译，可以直接用，由解释器来负责解释。\n5、脚本语言一般都是以文本形式存在,类似于一种命令。")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("  优点：\n  快速开发：脚本语言极大地简化了“开发、部署、测试和调试”的周期过程。\n  容易部署:大多数脚本语言都能够随时部署，而不需要耗时的编译/打包过程。\n")])])])])}),[],!1,null,null,null);s.default=i.exports}}]);