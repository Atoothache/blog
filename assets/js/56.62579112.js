(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{327:function(t,a,o){"use strict";o.r(a);var r=o(13),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("ArriyList：")]),t._v(" "),a("p",[a("strong",[t._v("即向数组中添加第一个元素时，数组容量扩为 10")]),t._v(" "),a("strong",[t._v("1.5 倍左右")])]),t._v(" "),a("p",[t._v("HashMap：")]),t._v(" "),a("p",[t._v("​\t给定的默认容量为 16，负载因子为 0.75。Map 在使用过程中不断的往里面存放数据，当数量达到了 16 * 0.75 = 12 就需要将当前 16 的容量进行扩容，而扩容这个过程涉及到 rehash、复制数据等操作，所以非常消耗性能。")]),t._v(" "),a("p",[a("strong",[t._v("loadFactor 加载因子")])]),t._v(" "),a("p",[t._v("loadFactor 加载因子是控制数组存放数据的疏密程度，loadFactor 越趋近于 1，那么 数组中存放的数据(entry)也就越多，也就越密，也就是会让链表的长度增加，loadFactor 越小，也就是趋近于 0，数组中存放的数据(entry)也就越少，也就越稀疏。")]),t._v(" "),a("p",[t._v("loadFactor 太大导致查找元素效率低，太小导致数组的利用率低，存放的数据会很分散。loadFactor 的默认值为 0.75f 是官方给出的一个比较好的临界值。")]),t._v(" "),a("p",[t._v("给定的默认容量为 16，负载因子为 0.75。Map 在使用过程中不断的往里面存放数据，当数量达到了 16 * 0.75 = 12 就需要将当前 16 的容量进行扩容，而扩容这个过程涉及到 rehash、复制数据等操作，所以非常消耗性能。")]),t._v(" "),a("p",[a("strong",[t._v("注意：扩容因子可以大于1，当扩容因子为2时，表示当数量达到了 16 * 2 = 32才需要将当前 16 的容量进行扩容（16指的是容量，哈希桶的桶数量。32数量是指当前hashmap做存放的键值对数量）")])])])}),[],!1,null,null,null);a.default=s.exports}}]);