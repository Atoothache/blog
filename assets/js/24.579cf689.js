(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{394:function(t,a,s){"use strict";s.r(a);var n=s(40),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tomcat是如何加载spring和springmvc及servlet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat是如何加载spring和springmvc及servlet"}},[t._v("#")]),t._v(" Tomcat是如何加载Spring和SpringMVC及Servlet")]),t._v(" "),s("h1",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("大家是否清楚，Tomcat是如何加载Spring和SpringMVC，今天我们就弄清下这个过程（记录最关键的东西）")]),t._v(" "),s("p",[t._v("其中会涉及到大大小小的知识，包括加载时候的设计模式，Servlet知识等，看了你肯定有所收获~")]),t._v(" "),s("h1",{attrs:{id:"tomcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat"}},[t._v("#")]),t._v(" Tomcat")]),t._v(" "),s("p",[t._v("tomcat是一种Java写的Web应用服务器，也被称为Web容器，专门运行Web程序")]),t._v(" "),s("h2",{attrs:{id:"tomcat启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat启动"}},[t._v("#")]),t._v(" tomcat启动")]),t._v(" "),s("p",[t._v("tomcat启动了之后会在操作系统中生成一个Jvm（Java虚拟机）的进程，从配置监听端口（默认8080）监听发来的HTTP/1.1协议的消息")]),t._v(" "),s("p",[t._v("默认配置文件这样")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("connectionTimeout")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("20000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("redirectPort")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("当Tomcat启动完成后，它就会加载其安装目录下webapps里的项目（放war包会自动解压成项目）")]),t._v(" "),s("h4",{attrs:{id:"小提问-webapps里多个项目-是运行在同一个jvm上吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小提问-webapps里多个项目-是运行在同一个jvm上吗"}},[t._v("#")]),t._v(" "),s("em",[t._v("小提问：webapps里多个项目，是运行在同一个JVM上吗")])]),t._v(" "),s("p",[t._v("是运行在同一个JVM上的（Tomcat启动时创建的那个），多个项目就是多个线程，之所以项目间数据不共享，是因为类加载器不一样的缘故  参考：")]),t._v(" "),s("h2",{attrs:{id:"加载web程序-spring-springmvc框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载web程序-spring-springmvc框架"}},[t._v("#")]),t._v(" 加载Web程序（Spring+SpringMVC框架）")]),t._v(" "),s("p",[t._v("tomcat启动完毕后，最关键的是生成了ServletContext（Tomcat的上下文），然后会根据webapps项目里的web.xml进行加载项目")]),t._v(" "),s("p",[t._v("下面是一个SpringMVC+Spring项目的部分web.xml")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--以下为加载Spring需要的配置--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--Spring配置具体参数的地方--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("context-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("contextConfigLocation"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    classpath:applicationContext.xml\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("context-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--Spring启动的类--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("listener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("listener-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.context.ContextLoaderListener"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("listener-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("listener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--以下为加载SpringMVC需要的配置--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("project"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.servlet.DispatcherServlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("load-on-startup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("load-on-startup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--servlet被加载的顺序，值越小优先级越高（正数）--\x3e")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("project"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.html"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"初始化spring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化spring"}},[t._v("#")]),t._v(" 初始化Spring")]),t._v(" "),s("p",[t._v("tomcat首先会加载进ContextLoaderListener，然后将applicationContext.xml里写的参数注入进去，来完成一系列的Spring初始化（如各种bean，数据库资源等等）")]),t._v(" "),s("p",[t._v("这里就是经常听到的Ioc容器的初始化了，我们搜索这个类发现以下代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContextLoaderListener")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContextLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContextListener")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//省略其他方法")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * Initialize the root web application context.\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("contextInitialized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContextEvent")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initWebApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//省略其他方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里最重要的是通过ServletContext，初始化属于Spring的上下文WebApplicationContext，并将其存放在ServletContext")]),t._v(" "),s("p",[t._v("WebApplicationContext多重要老铁们都懂得，我们经常用webApplicationContext.getBean()来获取被Spring管理的类，所以这也是IOC容器的核心")]),t._v(" "),s("p",[t._v("Spring采用这种监听器来启动自身的方法，也是一种设计模式，叫观察者模式：")]),t._v(" "),s("p",[t._v("整个过程是这样的，Tomcat加载webapps项目时，先通过反射加载在web.xml标明的类（通通放入一个数组）")]),t._v(" "),s("p",[t._v("到某个时刻，我tomcat（事件源，事件的起源）会发起一个叫ServletContextEvent的事件（里面带着各种参数）")]),t._v(" "),s("p",[t._v("凡是实现了ServletContextListener接口的类，我都会调用里面的contextInitialized方法，并把这个事件参数传进去")]),t._v(" "),s("p",[t._v("咳咳，现在我看看这个数组里有没符合条件的（遍历），发现真有实现这个接口的（类 instanceof 接口），就调用contextInitialized方法")]),t._v(" "),s("p",[t._v("于是Spring就被动态加载进来了~~")]),t._v(" "),s("p",[t._v("参考：")]),t._v(" "),s("h4",{attrs:{id:"题外话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题外话"}},[t._v("#")]),t._v(" "),s("em",[t._v("题外话：")])]),t._v(" "),s("p",[t._v("加载一个类，可以用用完整的类名，通过java反射加载，Class.forName(类名)")]),t._v(" "),s("p",[t._v("也能直接new 一个类 来加载")]),t._v(" "),s("h3",{attrs:{id:"初始化springmvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化springmvc"}},[t._v("#")]),t._v(" 初始化SpringMVC")]),t._v(" "),s("p",[t._v("看配置文件，标签是servlet，我们得首先了解下servlet是什么东东")]),t._v(" "),s("h3",{attrs:{id:"servlet简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servlet简介"}},[t._v("#")]),t._v(" Servlet简介")]),t._v(" "),s("p",[t._v("Servlet是一个接口，为web通信而生（说白了就是一堆sun公司的大佬们开会，拍板造出的类，有固定的几个方法）")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1764312/202012/1764312-20201208181143156-765773601.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img2020.cnblogs.com/blog/1764312/202012/1764312-20201208181143156-765773601.png",alt:"img"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("tomcat有一套定义好的程序（其实不只是tomcat，能跑java写的web应用服务器如Jetty等，都有这固定程序）")]),t._v(" "),s("p",[t._v("1.当tomcat加载进来一个类时，如果它实现了Servlet接口，那么会记载到一个Map里，然后执行一次init()方法进行Servlet初始化")]),t._v(" "),s("p",[t._v("2.当tomcat收到浏览器的请求后，就会在Map里找对应路径的Servlet处理，路径就是写在"),s("url-pattern",[t._v("标签里的参数，调用service()这个方法")])],1),t._v(" "),s("p",[t._v("3.当Servlet要被销毁了，就调用一次destroy()方法")]),t._v(" "),s("p",[t._v("各位看到这是不是感觉相识，跟Spring加载差不多嘛，都是实现了一个接口后就被命运（tomcat）安排~~")]),t._v(" "),s("p",[t._v("当然，我们自己实现Servlet接口太鸡儿麻烦了，于是有HttpServlet（一个抽象类）帮我们实现了大部分方法（包含http头的设置，doXXX方法判断等等）")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1764312/202012/1764312-20201208182617222-1653086969.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img2020.cnblogs.com/blog/1764312/202012/1764312-20201208182617222-1653086969.png",alt:"img"}}),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("所以我们只要继承HttpServlet就实现几个方法就能用啦")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1764312/202012/1764312-20201208182659719-991860520.png",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img2020.cnblogs.com/blog/1764312/202012/1764312-20201208182659719-991860520.png",alt:"img"}}),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"springmvc加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc加载"}},[t._v("#")]),t._v(" SpringMVC加载")]),t._v(" "),s("p",[t._v("为什么要讲Servlet，因为SpringMVC的核心就是DispatcherServlet（前置控制器），如图")]),t._v(" "),s("p",[t._v("![](/blog/img/dispatcherServlet .PNG)")]),t._v(" "),s("p",[t._v("DispatcherServlet由SpringMVC的实现，已经实现的很棒棒了，我们不需要再动它")]),t._v(" "),s("p",[t._v("tomcat从web.xml中加载DispatcherServlet，然后会调用它的init()方法")]),t._v(" "),s("p",[t._v("Servlet配置文件默认在/WEB-INF/"),s("servlet-name",[t._v("-servlet.xml，所以现在默认叫project-servlet.xml")])],1),t._v(" "),s("p",[t._v("当然，也能自己指定文件")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--以下为加载SpringMVC需要的配置--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("project"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.servlet.DispatcherServlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("load-on-startup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("load-on-startup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--指定配置文件--\x3e")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("contextCOnfigLocation"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("classPath:spring-servlet.xml"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("project"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*.html"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("当SpringMVC加载好后，浏览器有请求过来，如果是.html结尾，tomcat就会交给DispatcherServlet处理")]),t._v(" "),s("p",[t._v("而DispatcherServlet会根据路径找到对应的处理器处理，可以理解为我们写的Controller接收到了（具体SpringMVC处理流程会写一篇博文）")]),t._v(" "),s("p",[t._v("至此，浏览器发送请求，到执行我们写的代码这个流程就结束了 "),s("s",[t._v("撒花")])]),t._v(" "),s("p",[t._v("参考：")])])}),[],!1,null,null,null);a.default=e.exports}}]);